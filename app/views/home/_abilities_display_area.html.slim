.scroll-wrapper
  -@abilities.find_default_abilities_available(socket_num, mon.job).each do |abil|
    -@available = abil.number_of_self_available(@user)
    .ability-pane
      .ability-icon.shadowed2
        =image_tag abil.portrait.url(:small)
      .ability-info.shadowed2
        .well
          .col-md-4
            p=abil.name
          .col-md-2
            p AP: #{abil.ap_cost}
          .col-md-3
            p Owned: #{abil.number_of_self_owned(@user)}
          .col-md-3
            p Avail: #{@available}
        p=abil.description
      .ability-equip.shadowed2
        -case
          -when mon.abil_in_sock(socket_num).first == abil
            =image_tag mon.mon_portrait(current_user)
          -when @available < 1
            p Cannot Equip, 0 Available!
          -when @available >= 1
            -@abil_equipping = @ability_equippings.find_ability_equipping_for_socket(mon, socket_num)
            =link_to image_tag("ability-equip-avatar.png"), ability_equipping_for_user_path( @abil_equipping, {ability_equipping: {ability_id: abil, monster_unlock_id: mon, socket_num: socket_num, user_id: @user, ability_purchase_id: abil.find_first_abil_purchase_id_not_in_use(@user)}}), method: :patch, remote: true
          -else
            ="Error"
