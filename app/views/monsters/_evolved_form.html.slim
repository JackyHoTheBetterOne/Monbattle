=simple_form_for(@monster) do |f|
  div class='form-group'
    -case true
      -when Monster.all.empty?
        h1 Make some Base Monsters first
      -when Job.where(evolve_lvl: "1").empty?
        h1 Make some more Jobs with evolve lvl 1 First!
      -else
        .form-group
          h4=f.label "Monster that this will Evolve from"
          -if @monster.evolutions.exists?
            h3 ="*** Cannot change what monster, this monster is evolved from. Further Evolutions are using this monster! ***"
            =f.hidden_field :evolved_from_id, value: @monster.evolved_from_id
          -else
            .form-control = f.select "evolved_from_id", options_for_select(Monster.where(evolved_from_id: "0").collect{|m| [m.name, m.id]}, :selected => @monster.id)
          h4=f.label "The job of this evolved state"
          .form-control =f.collection_select :job_id, Job.all.where(evolve_lvl: "1"), :id, :name
          h4=f.label "The element of this evolved state"
          .form-control =f.collection_select :element_id, Element.all, :id, :name
          =f.input :evolve_animation
<<<<<<< HEAD
          =f.label "This monster name is universal, so name it well!"
          =f.text_field :name, class: 'form-control'
          =f.label "The description of this evolved state"
          =f.text_area :description, class: 'form-control', row: 2
          =f.label :max_hp
          =f.text_field :max_hp, class: 'form-control'
          =f.label :hp_modifier
          =f.text_field :hp_modifier, class: 'form-control'
          =f.label :dmg_modifier
          =f.text_field :dmg_modifier, class: 'form-control'
=======
          =f.input :name
          =f.input :description
          =f.input :max_hp
          =f.input :hp_modifier
          =f.input :dmg_modifier
>>>>>>> 055dac7d66ca334769db0dbd7ac3b8a485706d37
          =f.input :summon_cost
          hr=f.submit class: 'btn btn-primary'