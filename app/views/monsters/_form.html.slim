=form_for @monster, remote: true do |f|
  div class='form-group' id="monsterForm"
    -case true
      -when Element.all.empty?
        h1 Make some Elements First!
      -when Monster.all.empty? && Job.where(evolve_lvl: "0").empty?
        h1 Make some Jobs with evolve lvl 0 First!
      -when Monster.all.exists? && Job.where(evolve_lvl: "0").where("jobs.id NOT IN (?)", Monster.all.map(&:job_id)).empty?
        h1 Make some more Jobs with evolve lvl 0 First!
      -else
        .form-group
          h4=f.label "The job of this monster, and the evolution level"
          -if Monster.all.empty?
            .form-control =f.collection_select :job_id, Job.all.where(evolve_lvl: "0"), :id, :name
          -else
            .form-control = f.select "job_id", options_for_select(Job.where(evolve_lvl: "0").where("jobs.id NOT IN (?)", Monster.pluck(:job_id)).collect{|job| [job.name + " Elvl: " + job.evolve_lvl, job.id]}, :selected => @monster.job)
          / .form-control = f.select "job_id", options_for_select(Job.where(evolve_lvl: "0").collect{|job| [job.name + " Elvl: " + job.evolve_lvl, job.id]}, :selected => @monster.job)
          h4=f.label "The element of this monster"
          .form-control =f.collection_select :element_id, Element.all, :id, :name
          =f.label "Click to see existing monsters -- (Feature coming Soon)"
          =f.label "This monster name is universal, so name it well!"
          =f.text_field :name, class: 'form-control'
          =f.label "The description of this monster"
          =f.text_area :description, class: 'form-control', row: 2
          =f.label :max_hp
          =f.text_field :max_hp, class: 'form-control'
          =f.label :hp_modifier
          =f.text_field :hp_modifier, class: 'form-control'
          =f.label :dmg_modifier
          =f.text_field :dmg_modifier, class: 'form-control'
          =f.hidden_field :evolved_from_id, value: "0"
          hr=f.submit class: 'btn btn-primary'



